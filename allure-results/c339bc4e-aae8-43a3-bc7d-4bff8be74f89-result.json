{"name": "test_google_search", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Page.click: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\"input[name=\\\"btnK1\\\"]\")", "trace": "@pytest.mark.not_consider\n    def test_google_search():\n        with sync_playwright() as p:\n             # Launch browser using custom helper function\n            browser = launch_browser(p, browser_type='firefox', headless=False, maximize=True)\n    \n            page = browser.new_page()\n            base_page = BasePage(page)\n    \n            # Navigate to Google\n            base_page.goto(\"https://www.google.com\")\n    \n            # Perform search\n            base_page.fill_input('textarea[name=\"q\"]', 'Playwright')\n>           base_page.click_button('input[name=\"btnK1\"]')\n\ntests\\test_google_search.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\base_page.py:14: in click_button\n    self.page.click(selector)\nvenv\\Lib\\site-packages\\playwright\\sync_api\\_generated.py:9518: in click\n    self._sync(\nvenv\\Lib\\site-packages\\playwright\\_impl\\_page.py:772: in click\n    return await self._main_frame.click(**locals_to_params(locals()))\nvenv\\Lib\\site-packages\\playwright\\_impl\\_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001CADA9D11D0>\ncb = <function Channel.send.<locals>.<lambda> at 0x000001CAD955FBA0>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.click: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"input[name=\\\"btnK1\\\"]\")\n\nvenv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:514: TimeoutError"}, "start": 1721674121314, "stop": 1721674160773, "uuid": "aa94b033-3895-4a6d-a6b2-02aec39375d1", "historyId": "77401aebc4af34fcda99088a8fcd277d", "testCaseId": "77401aebc4af34fcda99088a8fcd277d", "fullName": "tests.test_google_search#test_google_search", "labels": [{"name": "tag", "value": "not_consider"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_google_search"}, {"name": "host", "value": "MF-E56IGFMMXBAL"}, {"name": "thread", "value": "7024-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_google_search"}]}